/*
   BRACKET L SYSTEM TREE
   DONE USING PROCGEN
   Author: Roman Dobias
*/
#include "svg.procgen"

parameter int iterations = 3;

parameter float ANGLE = 60.0;
parameter float RATE = 0.6;

// this structure carries the point of growth, the way of growth and
// thickness of subtree that will grow from this point
using seed = struct 
{
    point start;
    point way;
    float thickness;

};


// this rule transforms all points to line and creates three new points in
// the middle of line
using transform = rule seed
{
    return true;
} {
    float PI = 3.1415;

    collection STYLE;
    STYLE.insert(strokeWidthStyle(this.thickness));
    STYLE.insert(strokeColorStyle(REDCOLOR));

    appendSymbol(line(this.start.x, this.start.y, this.start.x+this.way.x, this.start.y+this.way.y, STYLE)); 
    point middlePoint = point(this.start.x+(this.way.x)/2.0,this.start.y+(this.way.y)/2.0);

    // decrease the size of way vector

    this.way.x = this.way.x*RATE;
    this.way.y = this.way.y*RATE;

    // create two seeds in the middle, rotated by angle

    point leftVector = point(cos(PI*ANGLE/180.0)*this.way.x-sin(PI*ANGLE/180.0)*this.way.y,
                             cos(PI*ANGLE/180.0)*this.way.y+sin(PI*ANGLE/180.0)*this.way.x);

    point rightVector = point(cos(PI*ANGLE/180.0)*this.way.x+sin(PI*ANGLE/180.0)*this.way.y,
                             cos(PI*ANGLE/180.0)*this.way.y-sin(PI*ANGLE/180.0)*this.way.x);


    appendSymbol(seed(middlePoint, leftVector,this.thickness*RATE));
    appendSymbol(seed(middlePoint, rightVector, this.thickness*RATE));
};


int init()
{
    ANGLE = (float)(iterations)*1.0;
    // start seed at the bottom of SVG picture, covering whole picture
    appendSymbol(seed(point(500.0,900.0), point(0.0,-700.0),30.0));
    setMaximumIterations(3);
}
